from random import *
NUMCARDS = 52
DECK = 0

suitName = ("♥", "♦", "♠", "♣")
rankName = ("A", "2", "3", "4", "5", "6", "7", 
            "8", "9", "10", "J", "Q", "K")
playerName = ("deck", "Player 1 Nick", "Player 2 Sam", "Player 3 Mason")
NUMPLAYERS = 3

def main():
    deck = Deck() #Initilize deck and players
    player = []

    for i in range(NUMPLAYERS): #Adds players to the game
        player.append(Player()) 
        player[i].name = playerName[i+1] 
        player[i].playerNum = i+1

    for i in range(5): #Shuffels the Cards to the players
        for x in range(NUMPLAYERS):
            player[x].assignCard(deck)
           
    for playerOn in range(NUMPLAYERS): #Loop does everyting on each of the players turns
        printName(playerOn,player)

        showHand(playerOn,player)
        scoreHand()
        input() #So the player has time to respond
        
        if (player[playerOn].isComputer):
            exchangeComputersHand()
        else:
            exchangePlayersHand()
        input()
        
        showHand(playerOn,player)
        scoreHand()
        input()

        passToNextPlayer(playerOn,player)
        input()
        
    if (NUMPLAYERS == 1): #all of the turns are done at this point
        pass
    else:
        findTheWinner()
        tellTheWinner()
    '''
    GOALS
    clearDeck()                                 done
    shuffleCards()                              done

    for (playerOn in range(1,numPlayers)):      done
        PrintName()                             done
        ScoreHand()                             inProgress
        PrintScores()                           inProgress
        ScoreHand()                             
        ShowHand()                              done

        if (PlayerOn is Computer):              done
            exchangeComputerHand()              inProgress
        else:
            exchangePlayerHand()                inProgress
        ScoreHand()                             

        PrintHand()                             
        EndPlayersTurn()                        done

        ScorePlayer()                           
        PassToNextPlayer()                      done

    printScores()                               done
    if (numPlayers == 1):                       done
        pass                                    done
    else:
        FindTheWinner                           inProgress
        Tell who wins                           inProgress'''

def tellTheWinner():
    print("Tell who the winner is")

def findTheWinner():
    print("Finds who the winner is")

def printName(playerOn,player):
    print(str("It's {}'s turn").format(player[playerOn].name))
    
def scoreHand():
    print("\tScore the Hand")

def showHand(playerOn, player):
    print(str("\t{}'s hand:\n\t{}").format(player[playerOn].name,player[playerOn].hand))
    
def passToNextPlayer(playerOn,player):
    if (playerOn + 1 == NUMPLAYERS):
        print(("Pass to {}").format(player[0].name))
    else:
        print(("Pass to {}").format(player[playerOn+1].name))

def exchangeComputersHand():
    print("The Player Computer Exchanges their Hand")

def exchangePlayersHand():
    print("The Player Exchanges thier Hand")


class Player():
    def __init__(self, name = "defalt", isComputer = False, hand = [], playerNum = 1, score = 0):
        self.name = name
        self.isComputer = isComputer
        self.hand = []
        self.playerNum = playerNum
        self.score = score

    def assignCard(self,deck):#Assigns a card to the player 
        cardsInDeck = [] 
        for i in range(len(deck.cards)):
            if (deck.cards[i].assignedTo == DECK): 
                cardsInDeck.append(i)
        randNum = int(random()*len(cardsInDeck)) #chooses an index in legalCards
        deck.cards[cardsInDeck[randNum]].assignedTo = self.playerNum
        self.hand.append(cardsInDeck[randNum])#Adds the number to the players hand
        
        return deck

    def showHand(self):
        print(self.hand)

    def calculateArr(self):
        arr = []
        for i in range(len(self.hand)):
            arr.append(Card.getRank(i))
        return arr
        
    def calculateAr2(self):
        ar2 = []
        for i in range(len(self.hand)):
            ar2.append(Card.getSuit(i))
        return ar2

class Deck():
    def __init__(self, cards = []):
        self.cards = cards
        for i in range(NUMCARDS):
            self.cards.append(Card(i))

    def showDeck(self):
        x = []
        for i in range(NUMCARDS):
            print("{}\t{:5}    \t{}".format(i,self.cards[i].getCardName(),self.cards[i].assignedTo))

class Card():
    def __init__(self, index, assignedTo = 0):
        self.index = index
        self.assignedTo = assignedTo

    def getRank(self):
        return self.index % len(rankName)

    def getSuit(self):
        return self.index // len(rankName)

    def getRankName(self):
        return rankName[self.getRank()]

    def getSuitName(self):
        return suitName[self.getSuit()]

    def getCardName(self): #This is very similar to printing the cards out
        return str("{} of {}").format(self.getRankName(), self.getSuitName())

class Hand():
    def __init__(self, hand = []):
        self.hand = hand

    def printCardsArrAr2(self):
        arr = self.convertToArr()
        ar2 = self.convertToAr2()
        
        for i in range(len(arr)):
            print(str(rankName[arr[i]] + suitName[ar2[i]]))

    def convertToArr(self):
        Arr = []
        for i in range(len(self.hand)):
            card = Card(self.hand[i])
            Arr.append(card.getRank())
        return Arr

    def convertToAr2(self):
        Ar2 = []
        for i in range(len(self.hand)):
            card = Card(self.hand[i])
            Ar2.append(card.getSuit())
        return Ar2

if (__name__ == "__main__"):
    main()
    
