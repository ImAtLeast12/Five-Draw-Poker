from random import *
NUMCARDS = 52
DECK = 0
PLAYER = 1
COMP = 2

#cardLoc = [0] * NUMCARDS
suitName = ("hearts", "diamonds", "spades", "clubs")
rankName = ("Ace", "Two", "Three", "Four", "Five", "Six", "Seven", 
            "Eight", "Nine", "Ten", "Jack", "Queen", "King")
playerName = ("deck", "player", "computer")

def main():
    
    player = Player()
    player.name = "Player"
    player.playerNum = 1

    computer = Player()
    computer.name = "Computers"
    computer.isComputer = True
    computer.playerNum = 2

    deck = Deck()

    for i in range(5):
        deck = player.assignCard(deck)
        deck = computer.assignCard(deck)
    print("Location of all cards\n#" + "\t" + "card" + "\t" + "\t " + "Location")
    deck.showDeck()
    
    
    print("\nPlayers Cards")
    player.showHand()
    print("\nComputer Cards")
    computer.showHand()

class Player():
    def __init__(self, name = "defalt",isComputer = False,hand = [],playerNum = 1):
        self.name = name
        self.isComputer = isComputer
        self.hand = []
        self.playerNum = playerNum

    def assignCard(self,deck): #generate a random number from 0 to 51 that it is inside the deck
        legalCards = []
        for i in range(len(deck.cards)):
            if (deck.cards[i].assignedTo == DECK): #tells me the cards that are left in the deck
                legalCards.append(i) #Stores that into legalCards
        
        randNum = int(random()*len(legalCards)) #chooses an index in legalCards
        print(randNum)
        
        deck.cards[i].assignedTo = self.playerNum
        self.hand.append(legalCards[randNum])
        return deck

    def showHand(self):
        print(self.hand)

class Deck():
    def __init__(self, cards = []):
        self.cards = cards
        for i in range(NUMCARDS):
            self.cards.append(Card(i))

    def showDeck(self):
        x = []
        for i in range(NUMCARDS):
            print("{}\t{:5}    \t{}".format(i,self.cards[i].getCardName(),self.cards[i].assignedTo))

class Card():
    def __init__(self, index, assignedTo = 0):
        self.index = index
        self.assignedTo = assignedTo

    def getRank(self):
        return self.index % len(rankName)

    def getSuit(self):
        return self.index // len(rankName)

    def getRankName(self):
        return rankName[self.getRank()]

    def getSuitName(self):
        return suitName[self.getSuit()]

    def getCardName(self): #This is very similar to printing the cards out
        return str("{} of {}").format(self.getRankName(), self.getSuitName())

if (__name__ == "__main__"):
    main()

